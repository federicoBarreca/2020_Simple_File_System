Operative Systems

Project no. 5: Simple File System implemented using LLA in C

Federico Barreca 1736423

Repository: https://gitlab.com/barreca.1736423/so-2020-filesystem


Simple File System is a software born from the need to manage and use the memory resources in a easy and high level environment.
The memory of a file system is usually structured in directories and file organized on a tree starting from a directory called "root".
Directories are particular files which can contain other directories and files while files store binary data.
Both directories and files are identified with a unique name in the directory where they are stored.
The focus of this project is on the implementation of a modular, maintainable, reliable, and extensibile Simple File System able to take care
of the initialization of a file system and the creation, modification, reading and deletion of directories and files.

The code is based on three modules:

- a "bitmap" data structure, representing the disk, that manages the indices of the blocks used for the storage of files and directories;
- a "disk driver" that creates and initializes a disk of fixed size and where are implemented the fundamental block management functions;
- a "simple file system" consisting in several data structures, that organize the file system, and functions for the interaction with the user.

The modules inside the directory must be compiled by tiping the command "make" from command line in a unix-like system.
The compilation generates two different executable files: "simplefs_test" and "simplefs_interactive".

The first one tests the fundamental functionalities and can be executed from command line by tiping:
- "./simplefs_test bitmap" to test the bitmap functions;
- "./simplefs_test disk_driver" to test the disk_driver functions;
- "./simplefs_test simplefs" to test the simple file system functions.

The first one tests the functionalities in an interactive shell and can be executed from command line by tiping "./simplefs_interactive".
